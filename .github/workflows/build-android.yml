name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-20.04
    timeout-minutes: 60

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          unzip \
          openjdk-11-jdk \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache buildozer directories
      uses: actions/cache@v3
      with:
        path: |
          ~/.buildozer
          .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Prepare buildozer.spec
      run: |
        # Настройки для CI
        sed -i 's/log_level = 2/log_level = 1/' buildozer.spec
        sed -i 's/warn_on_root = 1/warn_on_root = 0/' buildozer.spec
        # Показываем содержимое для отладки
        echo "=== buildozer.spec content ==="
        cat buildozer.spec

    - name: Accept Android licenses
      run: |
        # Создаем скрипт для автоматического принятия лицензий
        echo "y" | buildozer android debug 2>&1 | head -50 || true

    - name: Build APK
      run: |
        buildozer android debug
      timeout-minutes: 45

    - name: List build outputs
      run: |
        echo "=== Contents of bin directory ==="
        ls -la bin/ || echo "No bin directory"
        echo "=== Contents of current directory ==="
        ls -la
        echo "=== Find APK files ==="
        find . -name "*.apk" -type f

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: android-apk-${{ github.run_number }}
        path: |
          bin/*.apk
          **/*.apk
        retention-days: 30

    - name: Upload logs on failure
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          .buildozer/android/platform/build-*/logs/
          .buildozer/android/logs/
        retention-days: 7
